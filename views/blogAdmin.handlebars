<section>

    <div class="blog-banner-showcase">
        <img src="" alt="blog-banner-image" id="imageFilePath" />
    </div>
    <div class="container">
        <div class="row align-start">
            <div class="col-2"></div>
            <div class="col-8" id="postHere">

            </div>
            <div class="col-2"></div>
        </div>
    </div>

    <div class="container mt-5" id="uploadImg">
        <form id="uploadForm" enctype="multipart/form-data" class="p-4 shadow-sm rounded bg-light" z-index>
            <div class="mb-3">
                <label for="blogImage" class="form-label">Upload Blog Image:</label>
                <input type="file" id="blogImage" name="blogImage" class="form-control" accept="image/*">
            </div>
            <button type="submit" class="btn btn-primary w-100 uploadBtn">Upload Image</button>
        </form>
    </div>



    <div class="container">
        <div class="row align-start">
            <div class="col-2"></div>
            <div class="col-8" id="postHere">
                <div style="border: 2px solid white; ">
                    <div class="d-flex align-items-start flex-column m-3">
                    </div>
                    <div class="mb-3">
                        <label for="exampleFormControlInput1" class="form-label" style="color: white;">Subject</label>
                        <input type="email" class="form-control" id="newSubject" placeholder="type Subject Here">
                    </div>
                    <div class="mb-3">
                        <label for="exampleFormControlInput1" class="form-label" style="color: white;">Author</label>
                        <input type="email" class="form-control" id="authorName" placeholder="Type Author Name Here">
                    </div>
                    <div class="form-floating" style="margin: auto;" id="BlogPostBox">
                    </div>
                    <!-- bottom of sub-box -->

                    <div class="d-flex justify-content-between m-3" id="commentButton">
                        <div style="justify-content: flex-end; margin: auto;">
                            <button class="btn btn-primary" id="submitPost">New Post</button>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-2"></div>
        </div>
    </div>

</section>

<script src="/assets/js/postBlog.js"></script>
<script src="https://cdn.quilljs.com/1.3.6/quill.min.js"></script>
<script>
    var toolbarOptions = [
        // Text Formatting
        ['bold', 'italic', 'underline', 'strike'], // toggled buttons for bold, italic, underline, strikethrough

        // Text Headers and Custom Font Size
        [{ 'header': 1 }, { 'header': 2 }],        // custom button values for header levels 1 and 2
        [{ 'font': [] }],                          // font family selection
        [{ 'size': ['small', false, 'large', 'huge'] }],  // custom font size

        // Lists and Indentation
        [{ 'list': 'ordered' }, { 'list': 'bullet' }],    // ordered list, bullet list
        [{ 'indent': '-1' }, { 'indent': '+1' }],          // outdent/indent

        // Text Alignment and Direction
        [{ 'align': [] }],                                // text alignment options (left, center, right, justify)
        [{ 'direction': 'rtl' }],                          // text direction

        // Inline Color Customizations
        [{ 'color': [] }, { 'background': [] }],           // dropdown with default color choices

        // Text Heading (H1, H2, etc.)
        [{ 'header': [1, 2, 3, 4, 5, 6, false] }],         // header dropdown with multiple levels

        // Link, Image, Video
        ['link', 'image'],                        // add link, image, or video

        // Remove Formatting
        ['clean']                                          // remove formatting button
    ];
    var quill = new Quill('#BlogPostBox', {
        theme: 'snow',
        modules: {
            toolbar: {
                container: toolbarOptions,


                handlers: {
                    image: imageHandler,
                }
            }

        }
    });


    function imageHandler() {
        var input = document.createElement('input');
        input.setAttribute('type', 'file');
        input.setAttribute('accept', 'image/*');
        input.click();

        input.onchange = async function () {
            var file = input.files[0];
            if (file) {
                // Step 2: Upload the image to your server
                var formData = new FormData();
                formData.append('Images', file);
                console.log(formData)

                // Make an API request to your server to upload the image
                try {
                    const response = await fetch('/upload', {
                        method: 'POST',
                        body: formData
                    });

                    const result = await response.json();

                    console.log(result)
                    if (response.ok) {
                        // Step 3: Insert the image URL into the editor
                        const range = quill.getSelection();
                        quill.insertEmbed(range.index, 'image', result.paths[0]);
                    } else {
                        console.error('Failed to upload image');
                    }
                } catch (error) {
                    console.error('Error uploading image:', error);
                }
            }
        };
    }
</script>

<style>
    .blog-banner-showcase {
        display: none;
        text-align: center;
    }
    .blog-banner-showcase img{
        max-width: 600px;
        max-height: 600px;
    }
    .show{
        display: block !important;
    }
</style>